org: bcarquin
app: api-serverless
service: serverless-brando

plugins:
  - serverless-dotenv-plugin
  - serverless-openapi-documentation
  - serverless-webpack
  - serverless-offline
  
custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
    packager: 'yarn'
    excludeFiles: src/**/*.test.[t|j]s
  documentation:
    models:
      - name: ErrorResponse
        description: This is an error
        contentType: application/json
        schema: ${file(models/ErrorResponse.json)}

      - name: PutDocumentResponse
        description: PUT Document response model (external reference example)
        contentType: application/json
        schema: ${file(models/PutDocumentResponse.json)}

      - name: PutDocumentRequest
        description: PUT Document request model (inline example)
        contentType: application/json
        schema:
          $schema: http://json-schema.org/draft-04/schema#
          properties:
            SomeObject:
              type: object
              properties:
                SomeAttribute:
                  type: string

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  stage: ${"local"}
  region: eu-west-1
  #profile: deploy-aws
  environment:
    STAGE: ${self:provider.stage}

functions:
  bienvenido:
    handler: src/index.handler
    events:
      - http:
          path: /
          method: get
          cors: true
          documentation:
            summary: Create User
            description: Creates a user and then sends a generated password email
            requestBody:
              description: A user information object
            requestModels:
              application/json: PutDocumentRequest
            pathParams:
              - name: username
                description: The username for a user to create
                schema:
                  type: string
                  pattern: "^[-a-z0-9_]+$"
            queryParams:
              - name: membershipType
                description: The user's Membership Type
                schema:
                  type: string
                  enum:
                    - premium
                    - standard
            cookieParams:
              - name: SessionId
                description: A Session ID variable
                schema:
                  type: string
            methodResponses:
              - statusCode: 201
                responseBody:
                  description: A user object along with generated API Keys
                responseModels:
                  application/json: PutDocumentResponse
              - statusCode: 500
                responseBody:
                  description: An error message when creating a new user
                responseModels:
                  application/json: ErrorResponse
  buscarPlanetas:
    handler: src/index.detallePlaneta
    events:
      - http:
          path: /buscar/planetas
          method: post
          cors: true
          documentation:
            summary: Create User
            description: Creates a user and then sends a generated password email
            requestBody:
              description: A user information object
            requestModels:
              application/json: PutDocumentRequest
            pathParams:
              - name: username
                description: The username for a user to create
                schema:
                  type: string
                  pattern: "^[-a-z0-9_]+$"
            queryParams:
              - name: membershipType
                description: The user's Membership Type
                schema:
                  type: string
                  enum:
                    - premium
                    - standard
            cookieParams:
              - name: SessionId
                description: A Session ID variable
                schema:
                  type: string
            methodResponses:
              - statusCode: 201
                responseBody:
                  description: A user object along with generated API Keys
                responseModels:
                  application/json: PutDocumentResponse
              - statusCode: 500
                responseBody:
                  description: An error message when creating a new user
                responseModels:
                  application/json: ErrorResponse
  registrarPersonaje:
    handler: src/index.registrarPersonaje
    events:
      - http:
          path: /registrar/personaje
          method: post
          cors: true
          documentation:
            summary: Create User
            description: Creates a user and then sends a generated password email
            requestBody:
              description: A user information object
            requestModels:
              application/json: PutDocumentRequest
            pathParams:
              - name: username
                description: The username for a user to create
                schema:
                  type: string
                  pattern: "^[-a-z0-9_]+$"
            queryParams:
              - name: membershipType
                description: The user's Membership Type
                schema:
                  type: string
                  enum:
                    - premium
                    - standard
            cookieParams:
              - name: SessionId
                description: A Session ID variable
                schema:
                  type: string
            methodResponses:
              - statusCode: 201
                responseBody:
                  description: A user object along with generated API Keys
                responseModels:
                  application/json: PutDocumentResponse
              - statusCode: 500
                responseBody:
                  description: An error message when creating a new user
                responseModels:
                  application/json: ErrorResponse
  mostrarPersonaje:
    handler: src/index.mostrarPersonaje
    events:
      - http:
          path: /mostrar/personajes
          method: get
          cors: true
          documentation:
            summary: Create User
            description: Creates a user and then sends a generated password email
            requestBody:
              description: A user information object
            requestModels:
              application/json: PutDocumentRequest
            pathParams:
              - name: username
                description: The username for a user to create
                schema:
                  type: string
                  pattern: "^[-a-z0-9_]+$"
            queryParams:
              - name: membershipType
                description: The user's Membership Type
                schema:
                  type: string
                  enum:
                    - premium
                    - standard
            cookieParams:
              - name: SessionId
                description: A Session ID variable
                schema:
                  type: string
            methodResponses:
              - statusCode: 201
                responseBody:
                  description: A user object along with generated API Keys
                responseModels:
                  application/json: PutDocumentResponse
              - statusCode: 500
                responseBody:
                  description: An error message when creating a new user
                responseModels:
                  application/json: ErrorResponse
  documentacion:
    handler: src/index.documentacion
    events:
      - http:
          path: /swagger/index.html
          method: get
          cors: true  